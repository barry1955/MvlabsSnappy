{"name":"Mvlabssnappy","tagline":"MvlabsSnappy is a ZF2 module that allow easy to thumbnail, snapshot or PDF generation from a url or a html page using Snappy PHP (5.3+) wrapper for the wkhtmltopdf/wkhtmltoimage conversion utility.","body":"MvlabsSnappy\r\n=========\r\n\r\nMvlabsSnappy is a ZF2 module that allow easy to thumbnail, snapshot or PDF generation from a url or a html page using Snappy PHP (5.3+) wrapper for the [wkhtmltopdf][wkhtmltopdf] conversion utility.\r\n\r\nInstallation\r\n------------\r\n#### With composer\r\n\r\n1. Add to your `composer.json`:\r\n\r\n    ```json\r\n    \"require\": {\r\n        \"mvlabs/mvlabs-snappy\": \"dev-master\"\r\n    }\r\n    ```\r\n\r\n2. Now tell composer to download MvlabsSnappy by running the command:\r\n\r\n    ```bash\r\n    $ php composer.phar update\r\n    ```\r\n\r\n#### Or just clone the repos:\r\n    \r\n    # Install snappy library\r\n    git clone https://github.com/KnpLabs/snappy.git vendor/snappy\r\n\r\n    # Install ZF2 Module\r\n    git clone https://github.com/mvlabs/MvlabsSnappy.git vendor/mvlabs/mvlabs-snappy\r\n    \r\n\r\n#### Post installation\r\n\r\n1. Enabling it in your `application.config.php`file.\r\n\r\n    ```php\r\n    <?php\r\n    return array(\r\n        'modules' => array(\r\n            // ...\r\n            'MvlabsSnappy',            \r\n        ),\r\n        // ...\r\n    );\r\n    ```\r\n\r\nConfiguration\r\n-------------\r\nAfter installing MvlabsSnappy, copy\r\n`./vendor/mvlabs/MvlabsSnappy/config/mvlabs-snappy.local.php.dist` to\r\n`./config/autoload/mvlabs-snappy.local.php` and change the binaries path  and add options as desired.\r\n\r\n\r\n    # /config/autoload/mvlabs-snappy.local.php\r\n```php    \r\n<?php\r\nreturn array(\r\n    'mvlabs-snappy' => array(\r\n        'pdf' => array(\r\n           'binary'  => '/usr/local/bin/wkhtmltopdf',\r\n           'options' => array(), // Type wkhtmltopdf -H to see the list of options\r\n        ),   \r\n        'image' => array(\r\n            'binary'  => '/usr/local/bin/wkhtmltoimage',\r\n            'options' => array(), // Type wkhtmltoimage -H to see the list of options\r\n         )\r\n     )   \r\n);\r\n```\r\n\r\n## wkhtmltopdf binary as composer dependencies\r\n\r\nIf you want to download wkhtmltopdf with composer you add to `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"google/wkhtmltopdf-i386\": \"0.11.0-RC1\"\r\n    }\r\n}\r\n```\r\n\r\nor this if you are in 64 bit based system:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"google/wkhtmltopdf-amd64\": \"0.11.0-RC1\"\r\n    }\r\n}\r\n```\r\n\r\n> __NOTE__: to be able to use those custom defined packages you need to copy into your `composer.json` following code:\r\n\r\n```json\r\n{\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"google/wkhtmltopdf-amd64\",\r\n                \"version\": \"0.11.0-RC1\",\r\n                \"dist\": {\r\n                    \"url\": \"http://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.11.0_rc1-static-amd64.tar.bz2\",\r\n                    \"type\": \"tar\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"google/wkhtmltopdf-i386\",\r\n                \"version\": \"0.11.0-RC1\",\r\n                \"dist\": {\r\n                    \"url\": \"http://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.11.0_rc1-static-i386.tar.bz2\",\r\n                    \"type\": \"tar\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nUsage\r\n-----\r\n\r\nThe module registers two services:  \r\n\r\n - the `mvlabssnappy.image.service` service allows you to generate images;\r\n - the `mvlabssnappy.pdf.service` service allows you to generate pdf files.\r\n\r\n### Generate an image from an URL\r\n\r\n     $this->serviceLocator->get('mvlabssnappy.image.service')->generate('http://www.mvlabs.it', '/path/to/myapp/data/image.jpg');\r\n\r\n### Generate a pdf document from an URL\r\n\r\n     $this->serviceLocator->get('mvlabssnappy.pdf.service')->generate('http://www.mvlabs.it', '/path/to/myapp/data/document.pdf');\r\n     \r\n\r\n### Render a pdf document as response from a controller\r\n\r\n```php\r\n    public function testPdfAction() {\r\n    \r\n        $now = new \\DateTime();\r\n        $viewRenderer = $this->serviceLocator->get('view_manager')->getRenderer();\r\n         \r\n        $layoutViewModel = $this->layout();\r\n        $layoutViewModel->setTemplate('layout/pdf-layout');\r\n    \r\n        $viewModel = new ViewModel(array(\r\n            'vars' => $vars,            \r\n        ));\r\n    \r\n        $viewModel->setTemplate('myModule/myController/pdf-template');\r\n            \r\n        $layoutViewModel->setVariables(array(\r\n            'content' => $viewRenderer->render($viewModel),\r\n        ));\r\n    \r\n        $htmlOutput = $viewRenderer->render($layoutViewModel);\r\n        \r\n        $output = $this->serviceLocator->get('mvlabssnappy.pdf.service')->getOutputFromHtml($htmlOutput);\r\n        \r\n        $response = $this->getResponse();\r\n        $headers  = $response->getHeaders();\r\n        $headers->addHeaderLine('Content-Type', 'application/pdf');\r\n        $headers->addHeaderLine('Content-Disposition', \"attachment; filename=\\\"export-\" . $now->format('d-m-Y H:i:s') . \".pdf\\\"\");\r\n        \r\n        $response->setContent($output);\r\n        \r\n        return $response;\r\n    \r\n    }    \r\n```    \r\n\r\n\r\nCredits\r\n-------\r\n\r\nMvlabsSnappy and [Snappy][snappy] are based on the awesome [wkhtmltopdf][wkhtmltopdf].\r\nMvlabsSnappy has been developed by [mvlabs][mvlabs].\r\n\r\n[snappy]: https://github.com/KnpLabs/snappy\r\n[wkhtmltopdf]: http://code.google.com/p/wkhtmltopdf/\r\n[mvlabs]: http://www.mvlabs.it\r\n[mvassociati]: http://www.mvassociati.it/en\r\n\r\n    \r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}